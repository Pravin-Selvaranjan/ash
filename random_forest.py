# -*- coding: utf-8 -*-
"""
Created on Thu Aug 17 18:41:48 2023

@author: ashke
"""

import csv
import os
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from collections import defaultdict
from sklearn.inspection import permutation_importance
import matplotlib.pyplot as plt

# jacobian_dictionary = {'100108STANDARD.nii': [0.9160105391431764, 0.9034867419815513, 0.923972474810111, 0.9764860956391057], '100124FC51.nii': [1.064745372537039, 1.015656325088344, 0.9890154602454311, 0.9873245628823819], '100397STANDARD.nii': [1.0586238554413103, 1.0064842137775833, 0.9885309572745606, 0.9845289481663466], '100655B30f.nii': [1.1631524033404057, 1.066727456064731, 1.0036578964185083, 0.9834962368631432], '100655B50f.nii': [1.226069325983052, 1.1181134961072647, 1.0299008077650813, 0.9912767998871707], '100658BONE.nii': [0.7787395382155504, 1.0511261427878908, 1.0148713871360295, 1.057776334382478], '100658STANDARD.nii': [0.6917737109465606, 0.9605870055819484, 0.9364528544921287, 1.0316591187151463], '100701BONE.nii': [0.963622187992553, 0.8744774894795813, 0.9196366939359941, 0.9667594039794901], '100794BONE.nii': [0.94790094902066, 0.9886493935086342, 0.982294314124909, 0.9990267436450879], '100794STANDARD.nii': [0.9434800916401284, 0.9895919413997113, 0.9821887368218225, 0.9983245519659394], '100884FC51.nii': [0.9809610256344766, 1.01214969313803, 1.017057126624214, 0.9966873253033058], '100885LUNG.nii': [1.0073465054609507, 0.9488437757610744, 0.9675599697454154, 0.9751813662731521], '100885STANDARD.nii': [0.9882519634082354, 0.9737057195831534, 0.9999999974108827, 0.9999997163532285], '100913STANDARD.nii': [1.1114462015564903, 0.9634731574836806, 1.0897744410152888, 1.0916243836294723], '100921B50f.nii': [0.3522918678837504, 0.7362147360129788, 0.9030246698377118, 0.979787530313942], '100973BONE.nii': [1.0, 1.0, 1.0, 1.0], '100973STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '100985STANDARD.nii': [1.01641051875114, 1.0100474578852503, 0.9727590885500508, 0.9999988047003487], '101089STANDARD.nii': [1.0452600636800875, 1.005901291835952, 0.981498836639938, 0.9846787126236985], '101097STANDARD.nii': [1.0014457258490805, 0.9942049678771163, 0.9999999922167776, 1.0036901155612177], '101142C.nii': [1.1052338131731008, 1.0000058067992454, 1.000000521642427, 1.001875508310452], '101192STANDARD.nii': [0.9746873791534307, 1.0051081811169866, 1.033405751245816, 1.0206851013069536], '101223BONE.nii': [0.011269869701767495, 0.9997664024291711, 1.0433687997346333, 1.0611537503571198], '101223STANDARD.nii': [0.22938307762810203, 0.7966610261666265, 1.0079362436773436, 1.0059296634636001], '101259BONE.nii': [1.01777940067381, 1.0043984902907117, 0.9929988576455098, 0.9990272695947754], '101259STANDARD.nii': [1.0636011212287728, 1.034332519244528, 1.0333935958797158, 1.0135161208718466], '101572B30f.nii': [0.935681478502096, 1.017320291494539, 1.045845016319826, 1.0298415051309777], '101572B50f.nii': [0.886321714488543, 1.0157973475292612, 1.0609235762275382, 1.044919396563882], '101606B50f.nii': [0.9950797832500262, 0.9726060126879108, 0.97849291864724, 0.9891725290091379], '101626STANDARD.nii': [0.9611465892299322, 0.9899644744097562, 0.9995267818112946, 0.9932833214145008], '101644B30f.nii': [1.0197349876126294, 1.0228390551488593, 1.0206533673241842, 1.0073553045617447], '101644B50f.nii': [1.0353437930930494, 1.0342899861944514, 1.0281283670488646, 1.0136725008827245], '101905BONE.nii': [1.0020749851532955, 1.0319276167382672, 1.0059384580754729, 0.9999997496553806], '101905STANDARD.nii': [1.0139244851664442, 1.026491679331249, 1.0032047307261076, 1.0050653578385496], '102012STANDARD.nii': [1.0016779780875815, 0.9862829904461773, 1.0318256747946932, 1.0417582803674075], '102045LUNG.nii': [1.1934230893389848, 0.9999992474436022, 0.9967333703693845, 0.9895277645438009], '102045STANDARD.nii': [1.221785273646839, 1.0185622100866436, 0.9633250729426539, 0.9783077534014655], '102067STANDARD.nii': [-6272.776821093615, 1883.5879462257835, 0.9999937292867633, 55.99658478651492], '102080FC51.nii': [-0.6245361679715118, -8.243930115751406, 2.55359271074654, 2.226871054110049], '102394B30f.nii': [1.0125099453332977, 0.9799571227606588, 0.9864440864435887, 0.9968671249804115], '102394B50f.nii': [1.0177208979969121, 0.9860522309613537, 0.9926255010873558, 1.002500525025536], '102451B30f.nii': [1.0024222831953098, 1.0045760738900067, 1.0034509872453972, 1.013092464013088], '102451B50f.nii': [1.0230227970934933, 1.0038498145546162, 0.9950730470824583, 1.0131732867198222], '102511STANDARD.nii': [0.9858128617307755, 1.0059823375063508, 1.0192712934977062, 1.0135753568424535], '102561B30f.nii': [1.007289716319379, 1.021974259681171, 1.0186305284576318, 1.011494599517732], '102563B30f.nii': [1.037224974942161, 0.9975938900548355, 0.9887118996153563, 0.9959383936948915], '102563B50f.nii': [1.0171421298858363, 0.9859328084694426, 0.9668993451553359, 0.9812886703106471], '102593B30f.nii': [1.0149989708770508, 1.0178733378669818, 1.006106212034065, 0.9994290372275647], '102691B30f.nii': [0.9625633777774567, 0.9999923145399757, 0.9843127411157869, 0.9999981341291337], '102773STANDARD.nii': [1.0909436582590284, 0.9895773375184893, 0.9792063033739159, 0.9709719749112865], '102815BONE.nii': [1.0, 1.0, 1.0, 1.0], '102815STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '102854STANDARD.nii': [1.0871732834183598, 1.0411926599124395, 1.011010568872301, 0.9997368203830604], '103095C.nii': [1.0573406524593632, 1.0024167669035995, 1.016228954770835, 0.9879382011320949], '103095D.nii': [1.1115248658392507, 1.0001670317664455, 1.0184522473566218, 0.9730229971875125], '103340B30f.nii': [1.3048019372981343, 1.1352837927523733, 1.0654702433033214, 0.9955334370665828], '103340B50f.nii': [1.286524477782432, 1.1332550585136256, 1.07438597058804, 0.9998145076771734], '103621B30f.nii': [0.6385048482140572, 1.1656679887522132, 1.3886334601146286, 1.106540773323779], '103811B30f.nii': [1.0902913223463593, 1.0388556033656284, 1.0119450144346207, 0.947176318247411], '103811B50f.nii': [1.1357137977749998, 1.1708980638610098, 0.8159830602820913, 0.5709937939424689], '103825STANDARD.nii': [0.9375873672014544, 1.0103625417935715, 1.0258950371425823, 1.0056997219870762], '103826B50f.nii': [0.7952111333826357, 0.9173510004480689, 1.013069875159218, 1.0201622497371508], '103837B30f.nii': [1.0073284352172625, 1.0036609183896743, 1.0179852116515933, 1.0196366811270148], '103837B50f.nii': [1.002498183959512, 0.9997624756968984, 1.020808660517429, 1.0192308518325437], '103874STANDARD.nii': [0.9473824704662339, 0.9818370807100423, 0.9999997586897896, 1.0089886444848644], '103882STANDARD.nii': [1.0483593383493712, 1.0480780193123929, 1.0286100615371412, 1.0152517580212246], '103981BONE.nii': [1.1113786777681471, 1.034276686540382, 0.966947227327765, 0.9625685546278421], '103981STANDARD.nii': [1.2067631266745775, 1.0353485893395302, 0.9578797676869488, 0.9461220572604859], '104008STANDARD.nii': [0.9182678539123773, 0.9614597983129859, 1.0000503610746037, 1.0076996330127133], '104031B30f.nii': [0.8876709079373347, 1.0391676313965612, 0.9998079960742025, 0.9837722526886233], '104031B50f.nii': [0.8456855283053778, 1.0103998297931494, 1.0203761721609208, 1.0080435902268623], '104033B30f.nii': [1.324598266565163, 1.803216030160714, 1.754921135001944, 1.560919489951159], '104033B50f.nii': [0.7332010035840905, 0.6301552203471853, 0.6937051794531697, 0.797007389409519], '104122B30f.nii': [1.4216149267749902, 1.1307777150963016, 0.9794283473708321, 0.9568103491333148], '104122B50f.nii': [1.1821223946751978, 1.1325894341421783, 0.9759869759813284, 0.9734481561625018], '104133STANDARD.nii': [1.144554263278056, 1.0059352580471188, 1.0219713447546168, 0.9734382767989219], '104375BONE.nii': [0.9391111143239732, 0.9868343079213011, 1.0301548353428938, 1.0177519334762293], '104375STANDARD.nii': [0.9572585314860301, 0.9937601806915485, 1.011442320127804, 1.0062150563618875], '104386B30f.nii': [1.0357627358587234, 1.0410468545805973, 1.042145702396885, 1.0108598974184984], '104386B50f.nii': [1.0517981760872444, 0.9910562696645835, 0.981102221645121, 0.962949575938261], '104437BONE.nii': [0.9291634577534077, 0.9800693656160903, 1.0123231703658726, 1.0174865060903004], '104437STANDARD.nii': [0.932174245920225, 0.9820991215301993, 1.0200621271495347, 1.035860648586447], '104444B30f.nii': [1.0786735933073404, 1.0491143686546427, 1.0380462048669994, 1.0221771529298906], '104444B50f.nii': [1.0588650638996209, 1.080280069128496, 1.0640135000940396, 1.0363971723223186], '104631LUNG.nii': [0.9860929333258099, 0.992616070965002, 0.9886824263030656, 0.9904591883010814], '104631STANDARD.nii': [0.9796636431752631, 0.984565743689043, 0.9887865898083682, 0.991526610314437], '105042STANDARD.nii': [1.1726109356268208, 1.0536250718324902, 0.9964039467461985, 0.9920019302977264], '105071FC51.nii': [0.9456798836939547, 0.9691353925974571, 1.0000324463408259, 1.0227101809968377], '105125BONE.nii': [0.4116433143763137, 0.7889319889892789, 1.0710804799763174, 1.1997112054029337], '105125STANDARD.nii': [0.43373345321320994, 0.8214073481757103, 1.1048393536079804, 1.2038012276065857], '105213BONE.nii': [0.9846882630586182, 1.0000239420214259, 1.0153229370799057, 1.0321738771187317], '105216STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '105546BONE.nii': [1.0, 1.0, 1.0, 1.0], '105546STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '105611FC51.nii': [1.0071163394052596, 1.0055735761144329, 1.009655100796837, 0.9916190835220116], '105620STANDARD.nii': [1.0309221080626894, 1.0295538931433117, 0.989284158089742, 1.0491263533847168], '105698STANDARD.nii': [0.9719904317139539, 0.9920974234020948, 1.0069936424836214, 1.0041236872559696], '105710FC51.nii': [1.0149347059346012, 1.0124249533076173, 1.0176874845847743, 1.014177743542659], '105754STANDARD.nii': [1.0614090046564708, 1.0187507632957944, 1.0002211476346679, 1.0017666144282178], '105771STANDARD.nii': [0.9639448009367911, 1.008175446381006, 0.9949127888018053, 0.9957214118290845], '105783BONE.nii': [1.098875146606314, 1.1280153313662953, 1.060550104842228, 1.0215135423469035], '105783STANDARD.nii': [0.9965004631930184, 1.0053182029757446, 1.0079183631922406, 1.0097751420269792], '105995B30f.nii': [1.019990534080907, 1.0017278438170205, 0.9976221358045173, 1.0019791579519084], '105995B50f.nii': [1.0247249980556001, 1.0100167515295386, 1.0030256987027146, 1.0037154651166518], '106023BONE.nii': [0.9595183059500839, 0.8624548288710612, 0.866292570766612, 0.9027932242246225], '106023STANDARD.nii': [1.0340322377623155, 0.9606039092359863, 0.9429032061239081, 0.9272806104342671], '106057B30f.nii': [0.3904542750265222, 0.6080986160014432, 0.7674146208399328, 0.8985245489404864], '106115STANDARD.nii': [1.0647803505166227, 1.0118181586340382, 0.9567680116958679, 0.9502783840967869], '106194STANDARD.nii': [0.9635371230542861, 0.9976502734252084, 1.0347373632211214, 1.0316648338499916], '106245STANDARD.nii': [1.0582136254238823, 1.009723406732828, 1.000000018561671, 0.9925080351353981], '106342C.nii': [1.0831715617844624, 1.0164186482497692, 0.9534116193716189, 0.9890030544056487], '106397STANDARD.nii': [1.0344367059010409, 1.0000107456928984, 0.9760978292222698, 0.9965119709258475], '106397BONE.nii': [1.0291976184347869, 1.0000058562005636, 0.9792529660837449, 0.9960391034615835], '106426B30f.nii': [0.726058937801012, 0.9809975439082103, 0.993194708136581, 0.9784109103093593], '106426B50f.nii': [0.9250157797288701, 0.8958984149080684, 0.9208006111000447, 0.9551957721027701], '106606B30f.nii': [0.996094550203383, 1.0000002289806174, 0.9920436928866471, 0.9958069077839451], '106677FC51.nii': [1.1554746527703736, 1.1569929869068478, 1.0380318877457082, 0.8472241447465185], '106692STANDARD.nii': [0.983462450964661, 1.0009145275142657, 1.0026010433183639, 0.9974524154317275], '106819BONE.nii': [1.1402979152239134, 1.047969357493248, 1.0131233693940251, 0.9998273855299171], '106819STANDARD.nii': [1.1349670092295847, 1.0452271337136914, 1.006613129339703, 0.9966396319973001], '106844BONE.nii': [1.0419577432715537, 0.9999993304556162, 0.9999999152139083, 0.991840394755417], '106844STANDARD.nii': [1.0215979211865585, 0.9999975929736088, 0.9999999223320817, 0.9937700304676317], '106990STANDARD.nii': [1.0635905109799222, 1.017490151265474, 0.9985253127707305, 0.9998564437396916], '107040LUNG.nii': [1.0080079902789734, 1.0063281455022544, 0.9905026206120795, 1.0033586489876778], '107040STANDARD.nii': [1.0125648600363195, 1.0070252921783818, 0.9989000175113556, 0.9964570861060341], '107138STANDARD.nii': [1.144220966580017, 1.0207074716834557, 1.0000000861486673, 0.9960021664459536], '107155BONE.nii': [0.9118171755146103, 0.9784492955591514, 0.9999999101142428, 0.9999987602208003], '107155STANDARD.nii': [0.8816320120183634, 0.9550797435756979, 0.9999999780625142, 0.9999996826973844], '107156STANDARD.nii': [0.8769234463371351, 0.9410486827250846, 1.0355391525289603, 1.0568280686863833], '107298B30f.nii': [0.9933214540448118, 0.9944826419209463, 0.9895701171327915, 1.001677543396636], '107298B50f.nii': [1.014548819645171, 0.9973432928279198, 0.9903682616205761, 0.9972790393309262], '107406BONE.nii': [0.9676807674778412, 0.9746531366174125, 0.982849272849356, 1.003174981761414], '107406STANDARD.nii': [0.9778046096472938, 0.9983771118211516, 1.0002847690287202, 1.0065510846667223], '107516B30f.nii': [1.1374590444140569, 1.1576707036976162, 1.1661475870998663, 1.1996208760763245], '107525BONE.nii': [0.5532622522057233, 0.292166156846593, 1.2055773491475148, 1.0107152056747413], '107525STANDARD.nii': [0.9173147330591215, 0.9760620202840752, 0.9027384601950809, 1.044817321668865], '107552STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '107569B30f.nii': [0.9764579653871036, 0.9454641169316697, 0.9313438490778267, 0.9411644480313064], '107569B50f.nii': [0.947353204114739, 0.95856116074684, 0.9710798437552924, 0.9517035135176506], '107576B30f.nii': [1.080042683632883, 1.0295461496408165, 0.9750876996755726, 0.9847980607184189], '107576B50f.nii': [1.194956452281246, 1.0758408058339335, 0.960421302467927, 0.9759850084593606], '107725STANDARD.nii': [1.0495016885352058, 1.0181491130668656, 0.9932352210902881, 0.9943062110382986], '107740BONE.nii': [1.04612320007304, 1.0179064269315088, 1.0029172681145835, 1.00461228397212], '107740STANDARD.nii': [1.0857866250406183, 1.0299907255750498, 0.9979828563059634, 0.9859020816968942], '107888STANDARD.nii': [1.0108328421182227, 1.000138726993382, 0.9953769795143467, 1.0019748782588846], '108071C.nii': [0.9663221879575765, 1.0011552138893074, 1.0236112850809769, 1.0073017036747447], '108071D.nii': [0.9838739147160216, 0.9980965468835851, 1.0147824677181803, 1.003488078241178], '108122BONE.nii': [0.8703581562006378, 0.9763260457654258, 1.1028650267682296, 1.038536804413533], '108122STANDARD.nii': [0.8568032602443987, 0.9638089398349994, 1.0892557218309753, 1.0256543872616464], '108205STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '108256BONE.nii': [0.7019075825835722, 0.9999975911966132, 1.1783880503912418, 0.9999974046830792], '108256STANDARD.nii': [0.9642217915161883, 0.9717658804601526, 1.0094724236079253, 0.9751818392903385], '108310STANDARD.nii': [1.0140185161775295, 1.0148503898307024, 1.0121745664663284, 1.0032388245311967], '108320C.nii': [1.0, 1.0, 1.0, 1.0], '108320D.nii': [1.0, 1.0, 1.0, 1.0], '108497B30f.nii': [1.0037413802439135, 0.9836333530349382, 0.9803363831766301, 0.9752357426717868], '108497B50f.nii': [0.979799068801744, 0.978683782200475, 0.9835876188501906, 0.976867786882008], '108561STANDARD.nii': [1.1065715846320674, 1.1146267796861675, 0.9856929132844751, 0.9340254712903477], '108624STANDARD.nii': [1.1337501348426677, 1.0436880603621257, 1.007162360557253, 0.9885416127330627], '108626BONE.nii': [1.0479126345029475, 0.9851227632216516, 1.0016707465400188, 1.0140694088847233], '108626STANDARD.nii': [0.6967643209675074, 0.5402527346673649, 0.7103889583839732, 0.7881546042372523], '108903STANDARD.nii': [0.8724869239163178, 0.9621840616520064, 1.011084503427797, 1.0127432110225916], '108971STANDARD.nii': [0.13252506652710827, 0.5422024266231612, 0.6546604595920814, 0.9997810162765559], '109018STANDARD.nii': [1.0350615456498424, 1.0511291276883028, 0.9903296207377688, 1.002388743152618], '109131B30f.nii': [0.8855900732753075, 0.9474430844389935, 1.0168612693665111, 1.0138212436930327], '109131B50f.nii': [1.0, 1.0, 1.0, 1.0], '109151STANDARD.nii': [1.0180388244991738, 0.9999999246660582, 0.9878637737863615, 0.9934697834884191], '109216C.nii': [1.0461183439544333, 0.9921704943111398, 0.9647702908905392, 0.9810119948658814], '109256B50f.nii': [0.9364513406975841, 1.0159120722196084, 1.027700459937277, 1.011108508760985], '109256B30f.nii': [0.951721870685723, 1.0205964037385193, 1.0308047502371676, 1.0098654844632569], '109345B30f.nii': [0.8860781509234862, 0.9351047758361515, 0.9308221723017354, 0.8886948593780298], '109345B50f.nii': [1.0296512636570112, 0.9603867891823016, 0.8698305164440601, 0.8432817071921207], '109492B30f.nii': [0.9990739937965978, 1.0189731601780627, 1.0195253492680718, 1.0177331179227698], '109492B50f.nii': [1.0262649502207009, 1.0277169098388732, 1.011651136267134, 1.0172342441360303], '109514BONE.nii': [0.9965574774333489, 0.9820112212889528, 0.9677657071226766, 0.9851630239364658], '109514STANDARD.nii': [0.9810928455102268, 0.9890963991615382, 0.9792154079453738, 0.9903724061264967], '109531STANDARD.nii': [1.017334217874686, 1.0229089877051603, 1.000000000865334, 1.009625371820349], '109572FC51.nii': [0.9808234017458819, 0.986903867254836, 0.9968297277440208, 0.9995204274950432], '109573STANDARD.nii': [0.9350082983949342, 1.0239531070912042, 1.03282254687079, 1.046201364819087], '109575STANDARD.nii': [0.8081692474221521, 0.9112865766811754, 1.0001765603417667, 1.0251450566829785], '109584B50f.nii': [1.151460337805669, 1.11830048818911, 1.019264511993204, 0.9945397858813989], '109584B30f.nii': [1.2283327480599013, 1.084250968109889, 0.99500067877629, 0.9713282391894562], '109607BONE.nii': [0.6259973637579314, 0.880235025743548, 0.9428627769417931, 0.982222593429485], '109607STANDARD.nii': [1.0173363159711437, 0.9869414252357334, 0.9586696734052116, 0.98810078539263], '109811STANDARD.nii': [0.969294415805474, 0.9882732254711297, 0.9950088294435128, 0.9935012391706806], '109818STANDARD.nii': [0.31692716917463953, 0.8216424518218871, 0.9613699542538938, 0.9914869207761879], '109878B30f.nii': [0.9723063894734387, 1.0245390020462108, 1.022854785100556, 1.0375988899639976], '109878B50f.nii': [0.9985611087631182, 1.0388918593275718, 1.0412140651344624, 1.0278301124274338], '109957LUNG.nii': [1.0844269974159937, 1.03191565281792, 1.0155515382609621, 1.0204099223599843], '109957STANDARD.nii': [1.0460886025524003, 1.0130881783828474, 1.0096027952089313, 1.0072179993729053], '110340B30f.nii': [0.9699844967111119, 0.9853960043715145, 0.9787403188700331, 0.9971073049836661], '110340B50f.nii': [0.9863297261346107, 0.9931539212923239, 0.9841563533392399, 0.9975663507706338], '110379FC51.nii': [0.1514608809192579, 0.57864043269685, 0.987887387334195, 0.9975126114051563], '110621STANDARD.nii': [744.5680658859978, -38.58219315276593, -81.47437140297716, -77.1587892740054], '110639B30f.nii': [1.8590040755204127, 1.0267162863499566, 0.7181093777780932, 0.6448285021871677], '110639B50f.nii': [0.4560761514306138, 1.1203183170036473, 1.1715296825723978, 0.9261253423141801], '110732B50f.nii': [0.9041441340580472, 0.9522607565450016, 0.9910750966217023, 0.9969105744688471], '110828FC51.nii': [1.004462318159915, 1.0215210653255022, 1.010071377940931, 0.9939753141871916], '110893LUNG.nii': [1.142883344122449, 1.1028812134411177, 1.0770204821937175, 1.0321165961835943], '110893STANDARD.nii': [0.9349900972484535, 0.9594493398502347, 0.9640457180605405, 1.017645660437357], '111063STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '111079BONE.nii': [1.1493794318158255, 0.9964250349101446, 0.9119973939770243, 0.9465197827929697], '111079STANDARD.nii': [1.15386794207706, 0.9955095179423857, 0.905297531782579, 0.9497245817914985], '111164BONE.nii': [0.8971233086793221, 1.112899841577481, 0.9225772109217921, 0.8797181936166176], '111164STANDARD.nii': [0.626189836140843, 0.7644999183037314, 0.9425271156404016, 0.901781266384397], '111208STANDARD.nii': [0.7819464883783492, 0.8671487040783922, 1.0701536084287449, 1.058561115303198], '111405BONE.nii': [1.2040842622192016, 1.2630880287865245, 1.2907254515329936, 1.1171513472426917], '111405STANDARD.nii': [1.186962877876836, 1.2840754144892006, 1.3037270402418706, 1.1109916197751366], '111411BONE.nii': [1.0505235898250103, 1.0105002613300258, 1.0054015844451627, 1.0031242882420561], '111411STANDARD.nii': [1.042927413388114, 1.0054714717929754, 1.0042358275708483, 1.0031310409772154], '111454B50f.nii': [1.4201371192548786, 0.9510056986916653, 0.9173653338996242, 0.8966820209014218], '111458B30f.nii': [1.0, 1.0, 1.0, 1.0], '111552FC51.nii': [-0.1059201110727416, 1.0000026794734052, 0.855085852906966, 0.933574344031536], '111623BONE.nii': [0.6790905246488808, 0.9999971134721766, 0.9999999187010689, 1.0298011703720598], '111623STANDARD.nii': [0.6973551271370886, 0.9135163293652211, 1.0811657470660407, 1.0109880396532023], '111787FC51.nii': [1.003373073671999, 0.9921551179230078, 0.9748256645181358, 0.9938086030388211], '111865FC51.nii': [1.0492939409942381, 1.0077114929842053, 0.9855325426856522, 0.9900006995842753], '111935BONE.nii': [1.0258828118032857, 1.0405971852430562, 1.0110689362684548, 0.9965812741514661], '111935STANDARD.nii': [1.0274751090042016, 1.0288364814589854, 1.0195372066582409, 1.0051656290820494], '112140B50f.nii': [1.0082377626644339, 0.9916119743667626, 0.9882073715235713, 0.9958004898540326], '112140B30f.nii': [1.0120955555798121, 0.9950125165721997, 0.9928026164192087, 0.9981619702602851], '112240BONE.nii': [0.996802846623452, 1.0105947349890003, 1.019780903156307, 1.0101452612748125], '112240STANDARD.nii': [1.0130604405479093, 1.0084124695441146, 1.002747000311121, 1.0040271045876976], '112258BONE.nii': [0.9832452442736894, 0.9942347264815781, 0.9908523699237882, 0.9817346420232991], '112258STANDARD.nii': [0.9911597882510765, 0.986558335994791, 0.9695484072592016, 0.9780494656999731], '112272STANDARD.nii': [0.9863047493495758, 1.0049129339507934, 1.010319628100198, 1.0182113617663988], '112481BONE.nii': [1.1623577929252653, 1.0478783322684961, 1.0741653178486616, 1.0632587428350362], '112481STANDARD.nii': [0.927929321274324, 0.9757315721024667, 0.9938147329805951, 0.9763631971538977], '112496BONE.nii': [0.950934960783478, 0.9999999996748834, 1.007845767556537, 1.0069619804610959], '112496STANDARD.nii': [0.940660308047067, 0.9601398362687064, 1.0230553695676547, 1.0123960474926759], '112568BONE.nii': [0.970519165957961, 1.0494802900080606, 1.0000000184383593, 1.0087852229922392], '112634B30f.nii': [1.0035874342404865, 0.9969779271141127, 1.0004329180794524, 0.9990399280586503], '112634B50f.nii': [1.0222016757686194, 0.9994443459646046, 0.9998408340920715, 0.9977132265039927], '112650C.nii': [0.9706950148584986, 0.9910082462200401, 1.0067866625449073, 1.0037397480845478], '112650D.nii': [0.9661345040031125, 0.9924094214075355, 1.0162077099414006, 1.0055182948393964], '112660B30f.nii': [0.1553657577215231, 0.6745817581678315, 0.8422483905020922, 0.9336013189505558], '112660B50f.nii': [1.0683842819644447, 1.0145053020338992, 1.0087877476173484, 1.0048244115022522], '112699B30f.nii': [0.8235342944975773, 0.94692136067788, 1.0536817928846034, 1.2876696206311526], '112699B50f.nii': [0.8012332044031945, 1.0041816198402238, 0.999986684897812, 0.8820324773630546], '112870BONE.nii': [0.8945621289469226, 0.9500474128807589, 0.9815455632141432, 0.9924952240680521], '112870STANDARD.nii': [0.9762225785898623, 0.9762069199953001, 0.9666972410349798, 0.9820848886404671], '112910LUNG.nii': [0.9961796142148013, 0.9950227290986222, 0.9923794632476249, 1.0007134189283076], '112910STANDARD.nii': [0.9741329390154064, 0.9940067166339251, 1.0088634185943908, 1.0036324712856999], '112981STANDARD.nii': [1.1596278901672268, 1.0433819177522052, 0.9956318261491155, 0.9883532271923224], '113012B30f.nii': [1.0208785448346518, 1.0042057312240777, 0.9965018921986585, 0.99743978144036], '113012B50f.nii': [1.0508519761015838, 1.0275657778171186, 1.002143763395599, 0.9997871194468052], '113013STANDARD.nii': [-0.7713053170323366, 0.9999990556067899, 0.448113408648906, 0.8287737866758806], '113014B50f.nii': [1.0139858044721681, 1.0114492510302795, 1.0053467040351958, 0.9969901589908035], '113248BONE.nii': [1.0972960422393934, 0.999999982024439, 1.0011770402676516, 0.9991003901146046], '113248STANDARD.nii': [1.0947052835899163, 0.9999997196183958, 1.002683896068616, 1.0001015036436407], '113270FC51.nii': [0.9138873973679003, 0.9407118137298082, 1.0146007899115441, 1.0217000613133194], '113355STANDARD.nii': [1.1257146599122534, 1.0640693212378054, 0.9999974679958068, 1.0042441273141423], '113411C.nii': [1.0185818563664624, 0.9998549282476409, 1.0000000102746844, 0.9892650342149467], '113665FC51.nii': [0.9961450009165339, 1.0273553485085913, 1.0066188518638446, 0.9866415028583053], '113847STANDARD.nii': [0.9554920770777603, 0.981585297862653, 0.9999999983390576, 0.999999815783217], '114856FC51.nii': [0.9943283243720258, 0.9780479130928841, 0.9305310026951823, 0.980111438071268], '115159STANDARD.nii': [0.7352998145013564, 0.867949010811766, 1.0064945220374526, 1.0594638122520588], '115174B30f.nii': [0.9604785005161337, 1.0238540643113363, 1.0030657651957722, 1.0278868983821512], '115174B50f.nii': [1.0024137881537154, 1.0342292791176417, 1.0023610893630952, 1.028142399824606], '115479STANDARD.nii': [0.9959267220755035, 1.0033011300806818, 1.0215924890040606, 1.0177083333557575], '115571STANDARD.nii': [0.9615132131072872, 1.089568468842569, 1.0513288694569645, 0.9816553539285487], '115741STANDARD.nii': [1.0165788356235028, 1.0130625406818392, 0.9967715958553739, 0.9763525943538984], '116289STANDARD.nii': [1.065891297737491, 0.9852115237404304, 1.0005071671438515, 1.0249444785668722], '116450FC51.nii': [0.9865220686200948, 1.001649494601566, 1.0090103293530412, 1.00266050425166], '116562STANDARD.nii': [0.9923151945437122, 0.9845691895818635, 0.9838050355656673, 0.9893844973375587], '116843STANDARD.nii': [0.758487178782617, 0.9343102438548921, 0.9993763894666315, 1.0091366667159105], '116849STANDARD.nii': [1.0089677633734606, 1.003214798092603, 0.9976643740142325, 0.9964494991355182], '116932STANDARD.nii': [1.0642528773074325, 1.0225576185238776, 1.014647256062396, 1.0105760534538244], '117265C.nii': [0.977287463049675, 0.9838028832548058, 1.0000000740693844, 0.9953790990398892], '117612B30f.nii': [1.0961136030364624, 1.0441286128600522, 1.0742655827914902, 1.0758537237039836], '117678B30f.nii': [0.44370308936492314, 1.0002064808213647, 0.8934437280322889, 0.9615159426614021], '118271STANDARD.nii': [0.8534170678556298, 0.9465868071556407, 0.9796569544225401, 0.9938323132854814], '118291STANDARD.nii': [0.9873211325126604, 0.955054761634838, 0.9751917055112829, 0.9964643520064939], '118297BONE.nii': [1.0554099558396843, 0.9999753474012028, 1.010899039862669, 0.9996626952114039], '118297STANDARD.nii': [1.027424394932735, 0.9999838130263504, 0.9999987325354015, 1.0000001460260366], '118302C.nii': [1.0341404221318786, 1.009634635299832, 1.0032315950106592, 1.0018564210759764], '118370STANDARD.nii': [1.2048714600866481, 1.03430773229636, 0.9639233721299639, 0.9789461473322986], '118443STANDARD.nii': [2.0259700386201818, 0.28489665602184816, 0.6461253777235775, 0.9792716485927067], '118545STANDARD.nii': [1.0978294857400537, 0.9374286758972378, 0.9475484462067556, 1.0152972125375705], '118553BONE.nii': [0.9759708682728745, 0.9242148306819059, 0.9237646423629423, 1.0076260940332957], '118553STANDARD.nii': [0.9485427734527238, 0.9064133859360509, 0.907331461512424, 1.0024993114355791], '118633STANDARD.nii': [1.0421652246614261, 1.0164650336665177, 0.9967246642456645, 0.9976050347788505], '119591C.nii': [0.9740458987262326, 0.9960965291033765, 0.9934593305762077, 1.0008273403466217], '119637B30f.nii': [1.0162113833798285, 0.9576946815681758, 0.9423651081750898, 0.9680312229065865], '120070B30f.nii': [1.204952657644255, 1.0519125633619844, 1.0000802157784232, 0.983608048149353], '120573STANDARD.nii': [0.9488710987149714, 0.9840756981047954, 1.0072293969064743, 0.9994692754505743], '120790BONE.nii': [0.9918611754428205, 0.992264067121914, 0.9962423017847042, 1.0053997919904474], '120790STANDARD.nii': [0.9810640430075914, 0.9918650229763554, 0.9887361184732146, 0.996298846084235], '120807STANDARD.nii': [1.0003170759120803, 1.0051438440716667, 1.0241358492885315, 1.0514692752165042], '120837STANDARD.nii': [1.1487941000747792, 1.0612596828439598, 1.006365296259723, 1.0019052593270454], '120954LUNG.nii': [1.3440082837880665, 1.144475097147928, 1.0265948619711396, 1.0207718170330349], '120954STANDARD.nii': [2.961278453372549, 1.6984410651285464, 0.791871910888217, 0.851786261699808], '121380FC51.nii': [0.9912641792892452, 1.0027795958870902, 1.0107429577553664, 1.0072226917337468], '121389B30f.nii': [0.9956076174266509, 0.9968807050020994, 1.0042296237632324, 1.0060081028470047], '121398STANDARD.nii': [1.084750968417905, 1.0207836610452943, 0.9952583288136776, 0.9993477654895947], '121813FC51.nii': [0.9589833857678518, 0.9978945556976665, 1.0042408777644973, 1.0007354413119898], '122080STANDARD.nii': [1.0078592331884626, 0.9999925684167652, 1.0073718373346898, 1.0039157302533277], '122224FC51.nii': [0.9491227777673656, 0.9936639333226237, 0.9809754039011152, 0.9820849694057683], '122376BONE.nii': [1.0118753795792332, 1.0421779190293263, 1.0580053172852324, 1.0231537478796702], '122376STANDARD.nii': [1.0628345214643111, 0.9708634409673845, 0.913847102602168, 0.9805494424789162], '122450B30f.nii': [2.5963119808941064, 1.6107153144135453, 0.8061332795375424, 0.7351926739632265], '123515BONE.nii': [1.0928323498648396, 1.0034500683905416, 1.0447596493457827, 1.0411744430104306], '123515STANDARD.nii': [-1.0297635786524462, 4.965838765263368, 2.901131956606253, 0.9055914284198913], '123802STANDARD.nii': [1.0760877391734978, 1.0167695933373186, 1.0217485786296732, 1.0000001819128628], '124323STANDARD.nii': [1.0120095945267076, 1.025826046126647, 1.01349287766686, 1.0033464784847648], '124864B30f.nii': [1.0132335591808999, 0.8912664067857771, 0.9570992024279346, 0.9985903411914415], '124973STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '125223STANDARD.nii': [0.9492301132207425, 0.962553844126895, 0.9777646859995716, 0.997834629655507], '125374C.nii': [0.9874395738565792, 0.9987573590498972, 1.0051782934296272, 1.0081860556941402], '125378B50f.nii': [1.0605503246144707, 1.0154318493474, 0.9791693967199391, 0.9877259469733315], '125450B30f.nii': [1.0, 1.0, 1.0, 1.0], '125450B50f.nii': [1.0, 1.0, 1.0, 1.0], '126407STANDARD.nii': [0.9414447056607216, 0.9105632363526603, 0.9044230733637822, 0.9246778032041224], '126581C.nii': [1.1060274359768514, 0.999412875083506, 1.0133166504252074, 1.0129947691006371], '126967B30f.nii': [0.998124531255129, 0.9747976685889184, 1.05248950372083, 1.132933384744101], '126967B50f.nii': [0.6366165184542464, 1.012164265950562, 1.0728825535412014, 1.1619436209776035], '127068STANDARD.nii': [1.6909727504884335, 1.8357604475517577, 0.9515056713401034, 1.1771625938757204], '127408STANDARD.nii': [0.8739512737859647, 0.9654292111697114, 0.9851543235379492, 0.9930598121293843], '127514STANDARD.nii': [0.9286350547023358, 0.9685263650852777, 1.0000351192512804, 1.0000047295066583], '127684FC51.nii': [0.4333942799775289, 0.8212167484202055, 0.9378214974884711, 1.0381410744507267], '127886STANDARD.nii': [0.9222716663847657, 0.9852301567937641, 1.0000000682618404, 1.0134421183762532], '128488STANDARD.nii': [1.0191074334451538, 1.0060227839959595, 1.0000167306766268, 1.0032645804130087], '128852STANDARD.nii': [0.9637855954102696, 1.0051545170911476, 1.0172561041536248, 1.0229565720930374], '128940B30f.nii': [1.0129498632617526, 0.9913928186958112, 0.960245013402793, 0.9805037771666337], '128940B50f.nii': [1.1469563601872133, 0.9795157875653321, 0.8908470822196556, 0.9260679594368427], '128944STANDARD.nii': [0.9529404930026537, 0.9864117269792548, 1.0706944757631978, 1.063255174258061], '129026STANDARD.nii': [1.1096394287012188, 1.0393553351174794, 1.009097148681239, 1.000355144665228], '129216STANDARD.nii': [1.6266627272595644, 0.9999880809211472, 0.861588195224303, 0.9044349993867641], '129440STANDARD.nii': [1.064756224051138, 1.0229080351703252, 1.0158075218858722, 0.9959537457092967], '129455STANDARD.nii': [1.0771088514904803, 1.0560704132565537, 1.0280997210136624, 0.9990255930768414], '129582STANDARD.nii': [0.9228898803046436, 1.0369337916579013, 1.007899856988257, 0.9454342797122695], '129678STANDARD.nii': [0.9951140713458134, 1.0192283925599268, 1.0187515873048696, 1.011822928837983], '130378STANDARD.nii': [0.40061369732824725, 0.8021199393233782, 0.7903424524332369, 0.7960012695515403], '130980STANDARD.nii': [1.0864212170879226, 1.0663895955826426, 1.0300522951186635, 0.9511436484335661], '131092STANDARD.nii': [1.1543313809216407, 1.0285265616486532, 0.9867349156708052, 0.9986582308146907], '131911B30f.nii': [1.0331251297885953, 0.9925417980746093, 0.9733573202180524, 0.9908696974596592], '131963BONE.nii': [0.9348204604245072, 0.9733478606421562, 1.0103849406796732, 0.9965941755644833], '131963STANDARD.nii': [0.9617252353732558, 1.0069751685003736, 1.0343316433944718, 1.024069877344085], '131986STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '132580STANDARD.nii': [1.0349001939682565, 1.0142899711708508, 1.014822435975072, 1.016717430829909], '132622B30f.nii': [1.0086893437917246, 1.036168118066531, 1.0252078226603925, 1.0116563343507183], '132730STANDARD.nii': [0.9585619105664225, 1.000001974470798, 1.00392580128297, 1.0038640908268366], '132848C.nii': [1.0087786442526194, 1.0016750470046707, 0.9766319268159438, 0.9836427862167697], '132982STANDARD.nii': [1.084962326625279, 1.02595206474221, 1.0013802908096485, 0.9974470773125074], '133680STANDARD.nii': [0.9904807683481144, 0.9941878571509432, 1.0097497283359693, 1.017006268978802], '133804STANDARD.nii': [1.0960183809745256, 1.0070817894122894, 0.966916557408778, 0.9756964999091088], '133898STANDARD.nii': [0.5583567809021135, 0.9999922135657913, 0.9304671023524849, 0.8949559347820365], '134274STANDARD.nii': [0.9681359882802913, 1.0096332664001715, 1.0211888772720625, 1.0132303745121436], '134503B30f.nii': [0.8983157905926011, 1.0591481270062935, 1.1604850541299079, 1.1137937897974743], '134503B50f.nii': [0.8803450430108817, 0.963311855143968, 1.0899386610982778, 1.157849205769977], '200268STANDARD.nii': [1.0005918504500224, 0.9906646134107597, 0.9795520749461076, 0.9962637587140746], '201257STANDARD.nii': [0.8768842643733307, 1.000986487108182, 1.0714658106332335, 1.0704100872372084], '201671STANDARD.nii': [1.3917205228822942, 1.1368615367021853, 0.9960694044590299, 0.9614830712956556], '201979BONE.nii': [0.9486482281059597, 0.9130062692753215, 0.7779459122160298, 0.9233681872450876], '202525STANDARD.nii': [1.235586576333547, 1.0000108523652445, 1.0000063203330676, 0.9956688812010249], '202707STANDARD.nii': [1.0917036764563328, 1.0275811303637294, 1.009238392685721, 0.9932492033338008], '204190STANDARD.nii': [0.9939014290602277, 0.999999500849023, 1.0062050769240554, 1.005538551705669], '205551STANDARD.nii': [1.303250403894947, 1.1314723371530468, 1.0752930251383819, 1.0465729106811834], '205687STANDARD.nii': [1.0734571603590601, 1.0322127509608927, 1.0675883737012604, 1.0931093917520984], '205766STANDARD.nii': [1.1374423805928955, 1.040919838033452, 1.0126094080640549, 1.0002149436777383], '205900STANDARD.nii': [1.5707910305243011, 1.361862376749148, 1.0580864677984951, 0.8648695014703243], '206308STANDARD.nii': [0.7230390616636665, 0.863239845629918, 0.9868763267262238, 1.022442705974802], '206784STANDARD.nii': [0.961019679090177, 0.9832650900822553, 0.9988347327180629, 1.0064099705476606], '207248STANDARD.nii': [1.0478340563957949, 1.0437139150408754, 1.0375474195765613, 1.0231550718491258], '207801STANDARD.nii': [1.0623349765610222, 1.0150858939923708, 1.0109468508772812, 1.009066994399333], '207836STANDARD.nii': [1.2029650145341086, 0.945339432198198, 0.9960398724804264, 1.0424415070897983], '208706STANDARD.nii': [1.021124094906117, 0.9999981958506007, 0.9944448711646049, 1.0062872655909054], '208801BONE.nii': [37.95858233208596, 6.387099826871968, -4.785308971961055, -2.8896607276578923], '208801STANDARD.nii': [0.24762360552160445, 0.5799234421537504, 0.8476076946301438, 0.900695394632254], '209339STANDARD.nii': [1.0951522247607568, 1.0344593496238237, 0.9942811745998101, 0.9934668038678273], '210419BONE.nii': [0.8948007081719135, 0.9474206071564727, 0.9091503817216414, 0.9858182010990174], '210419STANDARD.nii': [0.721731106609793, 0.7777714788140261, 0.8313660032975293, 0.9337364114219415], '210754B30f.nii': [0.9457327364497474, 0.9241618070979469, 0.9659428721181739, 0.9892858102666748], '210754B50f.nii': [0.9447461077025342, 0.9282860096814153, 0.9674343654755283, 1.0003716348350558], '210800STANDARD.nii': [0.9868962661742131, 0.999760492315361, 1.0000235228710959, 1.0049924175821274], '212191B30f.nii': [1.0181035935316176, 1.0032242722309124, 0.9964944522575309, 1.0024319613105404], '212222STANDARD.nii': [0.9640301869171264, 1.0275487070365914, 1.053988008096631, 0.995156858611884], '212849STANDARD.nii': [0.9117089915610306, 1.0042984187607538, 1.0226249860426946, 0.988013872003416], '213544B30f.nii': [1.0486956164216135, 1.1222268551576877, 1.0852156229580394, 1.016063532961524], '213544B50f.nii': [1.0903980100179511, 1.1687361842072201, 1.093342346533315, 1.010519372502392], '213734B30f.nii': [1.1325452478918165, 1.024373350152714, 1.020322374450357, 0.9975558738190035], '213946STANDARD.nii': [0.9671939842630259, 0.9741900256522954, 0.9527140083676571, 0.9801401099574067], '214412STANDARD.nii': [1.0, 1.0, 1.0, 1.0], '214500STANDARD.nii': [1.0459903876785541, 1.0959818463190738, 1.0384519647119526, 0.974400213702136], '215151STANDARD.nii': [1.0799423379349027, 1.019620893058055, 0.9827079542567602, 0.9479780913291982], '215325BONE.nii': [0.9203345724045976, 0.9181189025762029, 0.9200983020074386, 0.9758412237538007], '215325STANDARD.nii': [0.16876755618240144, 0.7545944563395767, 0.8788090502435452, 0.8286603646951367], '216250STANDARD.nii': [1.0118024277148918, 1.0000000740616526, 0.9777188155514429, 0.9836688738115534], '216334STANDARD.nii': [1.0255416404494675, 0.9994560518101339, 0.99224417417525, 0.9992000572658101], '217296STANDARD.nii': [0.9795761167414836, 0.9999999955929865, 0.9999999834441092, 1.000306089230493]}
# #my_dict = ast.literal_eval(jacobian_dictionary)
# with open("Jacobian_Dictionary.csv", 'w', newline='') as file:
#     writer = csv.writer(file)
    
#     # Write the header row
#     header = ["Key"] + [f"Value {i+1}" for i in range(len(next(iter(jacobian_dictionary.values()))))]
#     writer.writerow(header)
    
#     # Write the values as rows
#     for key, values in jacobian_dictionary.items():
#         row = [key] + values
#         writer.writerow(row)

file_names = os.listdir("C:/Ashan/ct_data")
df = pd.read_excel(r"C:\Users\ashke\Downloads\nlst15k_delivery_20180720\nlst_sct_ct_ab_20180720.csv\nlst_sct_ct_ab_20180720.xlsx", engine='openpyxl')
jacobian_df = pd.read_excel(r"C:\Ashan\data.xlsx", engine='openpyxl')
count_dict = defaultdict(int)

images_registered = [100108,
100124,
100124,
100397,
100655,
100655,
100658,
100658,
100701,
100794,
100794,
100884,
100885,
100885,
100913,
100921,
100973,
100973,
100973,
100973,
100985,
101089,
101089,
101097,
101097,
101142,
101192,
101192,
101223,
101223,
101259,
101259,
101259,
101572,
101572,
101572,
101572,
101606,
101606,
101626,
101644,
101644,
101644,
101644,
101905,
101905,
101905,
101905,
102012,
102045,
102045,
102067,
102067,
102080,
102394,
102394,
102394,
102394,
102451,
102451,
102511,
102511,
102561,
102561,
102563,
102563,
102593,
102593,
102691,
102773,
102773,
102815,
102815,
102815,
102815,
102854,
103095,
103095,
103095,
103095,
103340,
103340,
103621,
103811,
103811,
103825,
103826,
103837,
103837,
103874,
103874,
103882,
103882,
103981,
103981,
103981,
103981,
104008,
104008,
104031,
104031,
104033,
104033,
104122,
104122,
104133,
104133,
104375,
104375,
104375,
104375,
104386,
104386,
104437,
104437,
104437,
104437,
104444,
104444,
104631,
104631,
104631,
104631,
105042,
105042,
105071,
105125,
105125,
105125,
105125,
105213,
105216,
105216,
105546,
105546,
105546,
105546,
105611,
105620,
105698,
105698,
105710,
105710,
105754,
105754,
105771,
105771,
105783,
105783,
105783,
105995,
105995,
105995,
105995,
106023,
106023,
106057,
106057,
106115,
106194,
106194,
106245,
106342,
106342,
106397,
106397,
106397,
106426,
106426,
106606,
106606,
106677,
106692,
106692,
106819,
106819,
106844,
106844,
106990,
106990,
107040,
107040,
107138,
107155,
107155,
107156,
107298,
107298,
107298,
107298,
107406,
107406,
107516,
107525,
107525,
107525,
107525,
107552,
107569,
107569,
107576,
107576,
107725,
107740,
107740,
107888,
108071,
108071,
108122,
108122,
108205,
108256,
108256,
108310,
108310,
108320,
108320,
108497,
108497,
108561,
108624,
108626,
108626,
108626,
108626,
108903,
108903,
108971,
109018,
109018,
109131,
109131,
109131,
109131,
109151,
109151,
109216,
109256,
109256,
109256,
109345,
109345,
109492,
109492,
109514,
109514,
109514,
109514,
109531,
109572,
109572,
109573,
109575,
109584,
109584,
109584,
109607,
109607,
109607,
109607,
109811,
109818,
109878,
109878,
109957,
109957,
110340,
110340,
110379,
110621,
110639,
110639,
110732,
110828,
110893,
110893,
111063,
111079,
111079,
111079,
111164,
111164,
111208,
111405,
111405,
111405,
111405,
111411,
111411,
111454,
111458,
111552,
111623,
111623,
111623,
111623,
111787,
111787,
111865,
111865,
111935,
111935,
112140,
112140,
112140,
112240,
112240,
112240,
112240,
112258,
112258,
112272,
112481,
112481,
112481,
112496,
112496,
112496,
112496,
112568,
112634,
112634,
112634,
112634,
112650,
112650,
112650,
112650,
112660,
112660,
112660,
112660,
112699,
112699,
112699,
112699,
112870,
112870,
112910,
112910,
112981,
113012,
113012,
113012,
113013,
113014,
113248,
113248,
113248,
113248,
113270,
113270,
113355,
113411,
113665,
113847,
114856,
114856,
115159,
115159,
115174,
115174,
115479,
115571,
115741,
115741,
116289,
116450,
116450,
116562,
116562,
116843,
116849,
116932,
116932,
117265,
117612,
117678,
118271,
118291,
118297,
118297,
118297,
118297,
118302,
118370,
118443,
118545,
118553,
118553,
118553,
118553,
118633,
119591,
119591,
119637,
120070,
120573,
120790,
120790,
120807,
120837,
120837,
120954,
120954,
121380,
121380,
121389,
121398,
121398,
121813,
122080,
122224,
122376,
122376,
122376,
122450,
123515,
123515,
123802,
123802,
124323,
124323,
124864,
124973,
125223,
125374,
125374,
125378,
125450,
125450,
126407,
126581,
126581,
126967,
126967,
127068,
127408,
127408,
127514,
127514,
127684,
127886,
127886,
128488,
128852,
128852,
128940,
128940,
128944,
129026,
129216,
129440,
129440,
129455,
129582,
129678,
129678,
130378,
130980,
131092,
131092,
131911,
131911,
131963,
131963,
131963,
131963,
131986,
132580,
132580,
132622,
132622,
132730,
132730,
132848,
132982,
132982,
133680,
133680,
133804,
133898,
133898,
134274,
134274,
134503,
134503,
200268,
200268,
201257,
201257,
201671,
201979,
202525,
202525,
202707,
204190,
205551,
205687,
205766,
205766,
205900,
206308,
206784,
207248,
207801,
207801,
207836,
208706,
208801,
208801,
209339,
210419,
210419,
210754,
210754,
210800,
210800,
212191,
212191,
212222,
212849,
213544,
213544,
213734,
213946,
213946,
214412,
214500,
214500,
215151,
215325,
215325,
215325,
215325,
216250,
216250,
216334,
217296,
217296]
#integer_set = set(images_registered)


for file_name in file_names:
    parts = file_name.split('_')
    initial_number = parts[0]
    final_word = "_".join(parts[2:])
    count_dict[file_name] = (initial_number, final_word)

# Filter file names based on the conditions
filtered_file_names = [
    file_name for file_name in file_names
    if file_name.endswith('.nii') and list(count_dict.values()).count(count_dict[file_name]) > 1
]

print((filtered_file_names))

for item in filtered_file_names:
    split = item.split("_")
    img_number = str(int(split[1]) + 1)
    img_number_ = str(int(split[1]) + 2)
    file_1 = split[0]+"_"+img_number+"_"+split[2]
    file_2 = split[0]+"_"+img_number_+"_"+split[2]
    if split[0] == '215325':
        print(item, file_1, file_2)
    if item and file_1 in filtered_file_names:
        if file_1 and file_2 in filtered_file_names:
            filtered_file_names.remove(file_2)
        else:
            filtered_file_names.remove(file_1)
    elif item and (file_2) in filtered_file_names:
        filtered_file_names.remove(item)
        filtered_file_names.remove(file_2)
    else:
        None


print(len(images_registered))
#len(images_registered) SHOULD = len(filtered_file_names)
print(len(filtered_file_names))
print(filtered_file_names)
    
    
# Creating a list of just patient numbers for more filtering
# list_of_patient_ids = []
# for item in filtered_file_names:
#     list_of_patient_ids.append(item.split('_')[0])

# # Integer conversion for cross checking with excel patient data
# for i in range(0, len(list_of_patient_ids)):
#     list_of_patient_ids[i] = int(list_of_patient_ids[i])
    
    
# # Creating list of patient ID's without tumour status data
# no_patient_outcome = []
# for part in list_of_patient_ids:
#     if part in df['pid'].values:
#         None
#     else:
#         no_patient_outcome.append(part)
# # String conversion for filtered_file_names ammending
# for i in range(0, len(no_patient_outcome)):
#     no_patient_outcome[i] = str(no_patient_outcome[i])
# # Filtering out patient ID's without tumour status data
# for part in filtered_file_names:
#     start = (part.split('_'))[0]
#     if start in no_patient_outcome:
#         filtered_file_names.remove(part)
#     else:
#         None




# list_of_patient_ids = []
# for item in filtered_file_names:
#     list_of_patient_ids.append(item.split('_')[0])
    
# for i in range(0, len(list_of_patient_ids)):
#      list_of_patient_ids[i] = int(list_of_patient_ids[i])

# print(len(list_of_patient_ids))



# for i in range(0, len(images_registered)+1):
#     if images_registered[i] in list_of_patient_ids:
#         split = filtered_file_names[i].split("_")
#         if images_registered[i+1] == images_registered[i]:
#             filtered_file_names[i] = str(images_registered[i])+(split[1]+1)+split[2]
        



# filtered_patient_list = []
# for value in list_of_patient_ids:
#     if value in images_registered:
        
#         filtered_patient_list.append(value)
#     else:
#         None
# print(len(filtered_patient_list), "Here")      
    



# # String conversion for filtered_file_names ammending
# for i in range(0, len(images_registered)):
#     images_registered[i] = str(images_registered[i])
# # Filtering out patient ID's that have no registration
# for part in file_names:
#     start = (part.split('_'))[0]
#     if start in images_registered:
#         None
#     else:
#         file_names.remove(part)


# print(len(file_names))

# # Creating a list of just patient numbers for more filtering
# list_of_patient_ids = []
# for item in file_names:
#     list_of_patient_ids.append(item.split('_')[0])

# # Integer conversion for cross checking with excel patient data
# for i in range(0, len(list_of_patient_ids)):
#     list_of_patient_ids[i] = int(list_of_patient_ids[i])

# print(len(list_of_patient_ids))


# def convert_to_binary(value):
#     if value == 'Female':
#         return 0    
#     if value == 'Male':
#         return 1
#     if value == 'Former':
#         return 0
#     if value == 'Current':
#         return 1
#     if value == 'No':
#         return 0
#     if value == 'Yes':
#         return 1
#     if value == 2:
#         return 0
#     if value == 1:
#         return 1
#     else:
#         return None  # Handle other cases if needed



# patient_info = pd.read_excel(r"C:\Ashan\clinicalData_20191210.xlsx", engine='openpyxl')


# for row in patient_info.iterrows():
#     print(row)
   # print(patient_info.loc[patient_info['ptid'] == 100004])


# for value in patient_info['ptid'].unique():
#     # Filter the DataFrame to get rows with the current value
#     rows_with_value = patient_info[patient_info['ptid'] == value]
    
#     rows_with_value['age'].values[0]
    



# pid_scr_dict = {}
# scr_group_values = []
# for number in list_of_patient_ids:
#     # Check if the specific PID exists in the 'pid' column
#     if number in df['pid'].values:
#         # Find the row where the specific PID is located
#         row_index = df[df['pid'] == number].index[0]
        
#         # Extract the 'scr_group' value from the same row
#         scr_group_value = df.loc[row_index, 'scr_group']
        
#         # Store the PID and scr_group value in the dictionary
#         pid_scr_dict[number] = scr_group_value
#         scr_group_values.append(scr_group_value)
#     else:
#         #print(f"PID {number} not found in the 'pid' column.")
#         None
# # Print the collected PID and corresponding scr_group values
# #for pid, scr_group in pid_scr_dict.items():
#     #print(f"PID {pid}. Corresponding scr_group value: {scr_group}")

# print(len(scr_group_values))
# print(len(images_registered))


# patient_info_filtered = patient_info[patient_info['ptid'].isin(list_of_patient_ids)]
# columns_to_remove = ['weight', 'height', 'status', 'follow_up', 'studyUID']
# patient_info_modified = patient_info_filtered.drop(columns_to_remove, axis=1)

# # Convert to binary
# patient_info_modified['gender'] = patient_info_modified['gender'].apply(convert_to_binary)
# patient_info_modified['smoking'] = patient_info_modified['smoking'].apply(convert_to_binary)
# patient_info_modified['copd'] = patient_info_modified['copd'].apply(convert_to_binary)
# patient_info_modified['emphysema'] = patient_info_modified['emphysema'].apply(convert_to_binary)
# patient_info_modified['diabetes'] = patient_info_modified['diabetes'].apply(convert_to_binary)
# patient_info_modified['cardiac'] = patient_info_modified['cardiac'].apply(convert_to_binary)
# # Adding classifier data (status)
# patient_info_modified['scr_group'] = scr_group_values
# patient_info_modified['scr_group'] = patient_info_modified['scr_group'].apply(convert_to_binary)

# jacobian_bound = jacobian_df['0']
# jacobian_out = jacobian_df['1']
# jacobian_out_ = jacobian_df['2']
# jacobian_out__ = jacobian_df['3']

# patient_info_modified['Jacobian boundary'] = jacobian_bound
# patient_info_modified['Jacobian 2mm outside'] = jacobian_out
# patient_info_modified['Jacobian 4mm outside'] = jacobian_out_
# patient_info_modified['Jacobian 6mm outside'] = jacobian_out__

# output_file_path = 'C:/Ashan/modified_file.xlsx'  # Replace with the desired output file path
# patient_info_modified.to_excel(output_file_path, index=False)







# # Assuming you have a dataset in CSV format named 'lung_cancer_data.csv'
# data = pd.read_excel(r"C:/Ashan/modified_file.xlsx", engine='openpyxl')

# # Assuming the dataset has the following columns: age, weight, height, mean_jacobian, smoker, packs_per_year, label
# # where 'label' is the target variable (0 or 1)

# # Splitting the dataset into features (X) and target variable (y)
# x = data.drop('scr_group', axis=1)
# y = data['scr_group']

# # Splitting the data into training and testing sets
# x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# # Creating the Random Forest Classifier
# rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)

# # Training the classifier on the training data
# rf_classifier.fit(x_train, y_train)

# # Predicting on the testing data
# y_pred = rf_classifier.predict(x_test)

# # Calculating the accuracy
# accuracy = accuracy_score(y_test, y_pred)
# print(f"Accuracy: {accuracy:.2f}")


# feature_names = list(patient_info_modified.columns.values)

# result = permutation_importance(
#     rf_classifier, x_test, y_test, n_repeats=100, random_state=42, n_jobs=2
# )

# forest_importances = pd.Series(result.importances_mean, index=feature_names)

# fig, ax = plt.subplots()
# forest_importances.plot.bar(yerr=result.importances_std, ax=ax)
# ax.set_title("Feature importances using permutation on full model")
# ax.set_ylabel("Mean accuracy decrease")
# fig.tight_layout()
# plt.show()




